@inject LoadingService LoadingService

@if (LoadingService.IsLoading)
{
    <div class="loading-overlay">
        <div class="loading-card">
            <div class="spinner-wrapper">
                <div class="spinner"></div>
            </div>
            <p class="loading-message">@LoadingService.Message</p>
        </div>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        LoadingService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        LoadingService.OnChange -= StateHasChanged;
    }
}

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.6); /* semi-transparent dark overlay */
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        backdrop-filter: blur(2px);
    }

    .loading-card {
        background: #ffffff; /* light background for contrast */
        color: #212121; /* dark text for readability */
        padding: 2rem 3rem;
        border-radius: 1rem;
        box-shadow: 0 8px 20px rgba(0,0,0,0.5);
        text-align: center;
        min-width: 250px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .spinner-wrapper {
        margin-bottom: 1rem;
    }

    .spinner {
        width: 3rem;
        height: 3rem;
        border: 4px solid rgba(0,0,0,0.1);
        border-top-color: #4caf50;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    .loading-message {
        font-size: 1rem;
        font-weight: 600;
        color: #212121; /* dark text ensures visibility on light card */
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }
</style>
