@inject IDialogService DialogService
@inject NavigationManager Navigation

<p>Authorization required. Opening login...</p>

@code {
    private bool _dialogShown = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_dialogShown)
        {
            _dialogShown = true;
            var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small, FullWidth = true };
            var dialog = DialogService.Show<LoginDialog>(null, options);
            var result = await dialog.Result;

            if (!result.Canceled)
            {
                if (result.Data is bool loginSuccess && loginSuccess)
                {
                    Navigation.NavigateTo("/", forceLoad: true);
                }
                else
                {
                    // Optional: redirect to landing if login unsuccessful
                    Navigation.NavigateTo("/", forceLoad: true);
                }
            }
            else
            {
                // Dialog cancelled: redirect or stay
                Navigation.NavigateTo("/", forceLoad: true);
            }
        }
    }
}
