//using EventApp.Services.LocationServ;//using EventApp.Shared.DTOs.Location;//using EventApp.Shared.DTOs.Seat;//using EventApp.Shared.Enums;//using Microsoft.AspNetCore.Authorization;//using Microsoft.AspNetCore.Http;//using Microsoft.AspNetCore.Mvc;//namespace EventApp.Controllers//{//	[Route("api/[controller]")]//	[ApiController]//	public class LocationsController : ControllerBase//	{//		private readonly ILocationService _service;//		public LocationsController(ILocationService service) => _service = service;//		[HttpGet]//		public async Task<ActionResult<IEnumerable<LocationDto>>> GetAll()//			=> Ok(await _service.GetAllAsync());//		[HttpGet("{id}")]//		public async Task<ActionResult<LocationDto>> GetById(Guid id)//		{//			var location = await _service.GetByIdAsync(id);//			return location == null ? NotFound() : Ok(location);//		}//		[HttpPost]//		[Authorize(Roles = nameof(UserRole.Admin))]
//        public async Task<ActionResult<LocationDto>> Create(CreateLocationDto dto)//		{//			var created = await _service.CreateAsync(dto);//			return CreatedAtAction(nameof(GetById), new { id = created.Id }, created);//		}//		[HttpPut("{id}")]//		public async Task<ActionResult<LocationDto>> Update(Guid id, UpdateLocationDto dto)//		{//			if (id != dto.Id) return BadRequest();//			var updated = await _service.UpdateAsync(dto);//			return updated == null ? NotFound() : Ok(updated);//		}//		[HttpDelete("{id}")]//		public async Task<IActionResult> Delete(Guid id)//		{//			var deleted = await _service.DeleteAsync(id);//			return deleted ? NoContent() : NotFound();//		}//		[HttpGet("{id}/seatlayouts")]//		public async Task<ActionResult<List<SeatLayoutDto>>> GetSeatLayouts(Guid id)//		{//			var layouts = await _service.GetSeatLayoutsByLocationAsync(id);//			return layouts.Any() ? Ok(layouts) : NotFound();//		}//		[HttpPost("{id}/seatlayouts/bind")]
//        [Authorize(Roles = nameof(UserRole.Admin))]
//        public async Task<IActionResult> BindSeatLayouts(Guid id, [FromBody] List<Guid> seatLayoutIds)//		{//			var result = await _service.BindSeatLayoutsAsync(id, seatLayoutIds);//			return result ? Ok() : NotFound();//		}//		// ✅ Unbind seat layouts from a location//		[HttpPost("{id}/seatlayouts/unbind")]
//        [Authorize(Roles = nameof(UserRole.Admin))]
//        public async Task<IActionResult> UnbindSeatLayouts(Guid id, [FromBody] List<Guid> seatLayoutIds)//		{//			var result = await _service.UnbindSeatLayoutsAsync(id, seatLayoutIds);//			return result ? Ok() : NotFound();//		}//	}//}